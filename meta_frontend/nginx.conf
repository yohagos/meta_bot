# server {
#     listen 443 ssl;
#     server_name meta-ui;

#     ssl_certificate     /etc/nginx/certs/server.crt;
#     ssl_certificate_key /etc/nginx/certs/server.key;
#     ssl_protocols       TLSv1.2 TLSv1.3;
#     ssl_ciphers         HIGH:!aNULL:!MDS;

#     root /usr/share/nginx/html;
#     index index.html;

#     location / {
#       try_files $uri $uri/ /index.html;

#       add_header 'Access-Control-Allow-Origin' 'https://localhost:9090' always;
#       add_header 'Access-Control-Allow-Credentials' 'true' always;
#     }

#     location /api/ {
#       proxy_pass http://meta_api:8000/api/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#     }

#     location /auth/ {
#       proxy_pass http://localhost:9090/auth/;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-Proto $scheme;

#       add_header 'Access-Control-Allow-Origin' "$http_origin" always;
#       add_header 'Access-Control-Allow-Credentials' 'true' always;
#       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
#     }

#     location ~* \.(?:ico|css|js|gif|jpg|jpeg|png|svg|woff|woff2|ttf|otf|eot|ttf|ttc|map)$ {
#         expires 6M;
#         access_log off;
#         add_header Cache-Control "public";
#     }

#     error_page 404 /index.html;
# }

server {
  listen 443 ssl;
  server_name localhost;

  ssl_certificate     /etc/nginx/certs/server.crt;
  ssl_certificate_key /etc/nginx/certs/server.key;

  root /usr/share/nginx/html;
  index index.html;

  #–– Angular App
  location / {
    try_files $uri $uri/ /index.html;
  }

  #–– API‑Proxy
  location /api/ {
    proxy_pass       http://meta_api:8000/api/;
    proxy_set_header Host            $host;
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # falls CORS‑Preflight nötig:
    add_header 'Access-Control-Allow-Origin'  'https://localhost:4200' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
  }

  #–– Keycloak‑Proxy
  location /auth/ {
    proxy_pass       https://meta-kc:8443/auth/;
    proxy_set_header Host            $host;
    proxy_set_header X-Real-IP       $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;

    # SSL‑Verify ausschalten (alternativ: mount CA und proxy_ssl_verify on)
    proxy_ssl_verify off;

    add_header 'Access-Control-Allow-Origin'  "$http_origin" always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
  }

  error_page 404 /index.html;
}

