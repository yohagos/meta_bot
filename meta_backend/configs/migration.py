
KEYCLOAK_TABLES = {
    "admin_event_entity ",
    "alembic_version",
    "associated_policy",  
    "authentication_execution",
    "authentication_flow",
    "authenticator_config",      
    "authenticator_config_entry",
    "broker_link",
    "client",      
    "client_attributes",  
    "client_auth_flow_bindings",  
    "client_initial_access",      
    "client_node_registrations",  
    "client_scope",       
    "client_scope_attributes",    
    "client_scope_client",
    "client_scope_role_mapping",  
    "component",          
    "component_config",   
    "composite_role",     
    "credential",         
    "databasechangelog",
    "databasechangeloglock",      
    "default_client_scope",       
    "event_entity",       
    "fed_user_attribute", 
    "fed_user_consent",   
    "fed_user_consent_cl_scope",
    "fed_user_credential",
    "fed_user_group_membership",
    "fed_user_required_action",
    "fed_user_role_mapping",      
    "federated_identity", 
    "federated_user",     
    "group_attribute",    
    "group_role_mapping", 
    "identity_provider", 
    "identity_provider_config",
    "identity_provider_mapper",   
    "idp_mapper_config",  
    "jgroups_ping",       
    "keycloak_group",     
    "keycloak_role",      
    "migration_model",    
    "offline_client_session",     
    "offline_user_session",       
    "org",                
    "org_domain",         
    "policy_config",      
    "protocol_mapper",    
    "protocol_mapper_config",     
    "realm",              
    "realm_attribute",    
    "realm_default_groups",       
    "realm_enabled_event_types",  
    "realm_events_listeners",     
    "realm_localizations",
    "realm_required_credential",  
    "realm_smtp_config",  
    "realm_supported_locales",    
    "redirect_uris",      
    "required_action_config",     
    "required_action_provider",   
    "resource_attribute", 
    "resource_policy",    
    "resource_scope",     
    "resource_server",    
    "resource_server_perm_ticket",
    "resource_server_policy",     
    "resource_server_resource",   
    "resource_server_scope",      
    "resource_uris",      
    "revoked_token",      
    "role_attribute",     
    "scope_mapping",      
    "scope_policy",       
    "user_attribute",     
    "user_consent",       
    "user_consent_client_scope",  
    "user_entity",        
    "user_federation_config",     
    "user_federation_mapper",     
    "user_federation_mapper_config",
    "user_federation_provider",   
    "user_group_membership",      
    "user_required_action",       
    "user_role_mapping",  
    "web_origins",
}


def include_object(object, name, type_, reflected, compare_to):
    if type_ == 'table' and name in KEYCLOAK_TABLES:
        return False
    return True