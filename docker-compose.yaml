services:
  postgres:
    image: 'postgres:latest'
    container_name: 'meta_db'
    ports:
      - '5432:5432'
    networks:
      - meta-network
    environment:
      POSTGRES_PASSWORD: pgadmin
      POSTGRES_DB: meta
      POSTGRES_USER: pgadmin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: 'meta_kc'
    command: start-dev --verbose
    ports:
      - '9090:8080'
    networks:
      - meta-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: kcadmin
      KEYCLOAK_ADMIN_PASSWORD: kcadmin
      KC_DB: postgres
      KC_SCHEMA: public
      KC_DB_URL: jdbc:postgresql://meta_db:5432/meta
      KC_DB_USERNAME: pgadmin
      KC_DB_PASSWORD: pgadmin
      KC_HOSTNAME: localhost
      KC_FEATURES: token-exchange,admin-fine-grained-authz
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ./kc_data:/opt/keycloak/data/

  rabbitmq:
    image: 'rabbitmq:3.9-management'
    container_name: 'meta_mq'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - '8181:15672'
      - '5672:5672'
    networks:
      - meta-network
    restart: unless-stopped
    depends_on:
      - keycloak
    environment:
      RABBITMQ_DEFAULT_USER: mquser
      RABBITMQ_DEFAULT_PASS: mquser
      RABBITMQ_DEFAULT_VHOST: /meta
      RABBITMQ_CONFIG_FILE: /etc/rabbitmq/rabbitmq.conf
    volumes:
      - ./meta_rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./meta_rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./mq_data:/var/lib/rabbitmq

networks:
  meta-network:
    driver: bridge

